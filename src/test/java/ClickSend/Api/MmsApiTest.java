/*
 * ClickSend v3 API
 *  This is an official SDK for [ClickSend](https://clicksend.com)  Below you will find a current list of the available methods for clicksend.  *NOTE: You will need to create a free account to use the API. You can register [here](https://dashboard.clicksend.com/#/signup/step1/)..* 
 *
 * OpenAPI spec version: 3.1
 * Contact: support@clicksend.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ClickSend.Api;

import ClickSend.Model.DateBefore;
import ClickSend.Model.MmsMessageCollection;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MmsApi
 */
@Ignore
public class MmsApiTest {

    private final MmsApi api = new MmsApi();

    
    /**
     * Export all mms history
     *
     * Export all mms history
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void mmsHistoryExportGetTest() throws Exception {
        String filename = null;
        String response = api.mmsHistoryExportGet(filename);

        // TODO: test validations
    }
    
    /**
     * Get all mms history
     *
     * Get all mms history
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void mmsHistoryGetTest() throws Exception {
        String q = null;
        Integer dateFrom = null;
        Integer dateTo = null;
        Integer page = null;
        Integer limit = null;
        String response = api.mmsHistoryGet(q, dateFrom, dateTo, page, limit);

        // TODO: test validations
    }
    
    /**
     * Get Price for MMS sent
     *
     * Get Price for MMS sent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void mmsPricePostTest() throws Exception {
        MmsMessageCollection mmsMessages = null;
        String response = api.mmsPricePost(mmsMessages);

        // TODO: test validations
    }
    
    /**
     * Get all delivery receipts
     *
     * Get all delivery receipts
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void mmsReceiptsGetTest() throws Exception {
        Integer page = null;
        Integer limit = null;
        String response = api.mmsReceiptsGet(page, limit);

        // TODO: test validations
    }
    
    /**
     * Mark delivery receipts as read
     *
     * Mark delivery receipts as read
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void mmsReceiptsReadPutTest() throws Exception {
        DateBefore dateBefore = null;
        String response = api.mmsReceiptsReadPut(dateBefore);

        // TODO: test validations
    }
    
    /**
     * Send MMS
     *
     * Send MMS
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void mmsSendPostTest() throws Exception {
        MmsMessageCollection mmsMessages = null;
        String response = api.mmsSendPost(mmsMessages);

        // TODO: test validations
    }
    
}
