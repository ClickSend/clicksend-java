/*
 * ClickSend v3 API
 *  This is an official SDK for [ClickSend](https://clicksend.com)  Below you will find a current list of the available methods for clicksend.  *NOTE: You will need to create a free account to use the API. You can register [here](https://dashboard.clicksend.com/#/signup/step1/)..* 
 *
 * OpenAPI spec version: 3.1
 * Contact: support@clicksend.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ClickSend.Api;

import ClickSend.ApiException;
import ClickSend.Model.Contact;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContactApi
 */
@Ignore
public class ContactApiTest {

    private final ContactApi api = new ContactApi();

    
    /**
     * Delete a contact
     *
     * Delete a contact
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listsContactsByListIdAndContactIdDeleteTest() throws ApiException {
        Integer listId = null;
        Integer contactId = null;
        String response = api.listsContactsByListIdAndContactIdDelete(listId, contactId);

        // TODO: test validations
    }
    
    /**
     * Get a specific contact
     *
     * Get a specific contact
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listsContactsByListIdAndContactIdGetTest() throws ApiException {
        Integer listId = null;
        Integer contactId = null;
        String response = api.listsContactsByListIdAndContactIdGet(listId, contactId);

        // TODO: test validations
    }
    
    /**
     * Update specific contact
     *
     * Update specific contact
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listsContactsByListIdAndContactIdPutTest() throws ApiException {
        Integer listId = null;
        Integer contactId = null;
        Contact contact = null;
        String response = api.listsContactsByListIdAndContactIdPut(listId, contactId, contact);

        // TODO: test validations
    }
    
    /**
     * Get all contacts in a list
     *
     * Get all contacts in a list
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listsContactsByListIdGetTest() throws ApiException {
        Integer listId = null;
        Integer page = null;
        Integer limit = null;
        String response = api.listsContactsByListIdGet(listId, page, limit);

        // TODO: test validations
    }
    
    /**
     * Create new contact
     *
     * Create new contact
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listsContactsByListIdPostTest() throws ApiException {
        Contact contact = null;
        Integer listId = null;
        String response = api.listsContactsByListIdPost(contact, listId);

        // TODO: test validations
    }
    
    /**
     * Remove all opted out contacts
     *
     * Remove all opted out contacts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listsRemoveOptedOutContactsByListIdAndOptOutListIdPutTest() throws ApiException {
        Integer listId = null;
        Integer optOutListId = null;
        String response = api.listsRemoveOptedOutContactsByListIdAndOptOutListIdPut(listId, optOutListId);

        // TODO: test validations
    }
    
    /**
     * Transfer contact to another list
     *
     * Transfer contact to another list
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listsTransferContactPutTest() throws ApiException {
        Integer fromListId = null;
        Integer contactId = null;
        Integer toListId = null;
        String response = api.listsTransferContactPut(fromListId, contactId, toListId);

        // TODO: test validations
    }
    
}
