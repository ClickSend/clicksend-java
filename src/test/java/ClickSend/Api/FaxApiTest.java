/*
 * ClickSend v3 API
 *  This is an official SDK for [ClickSend](https://clicksend.com)  Below you will find a current list of the available methods for clicksend.  *NOTE: You will need to create a free account to use the API. You can register [here](https://dashboard.clicksend.com/#/signup/step1/)..* 
 *
 * OpenAPI spec version: 3.1
 * Contact: support@clicksend.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ClickSend.Api;

import ClickSend.Model.DateBefore;
import ClickSend.Model.FaxMessageCollection;
import ClickSend.Model.Url;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FaxApi
 */
@Ignore
public class FaxApiTest {

    private final FaxApi api = new FaxApi();

    
    /**
     * Get a list of Fax History.
     *
     * Get a list of Fax History.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void faxHistoryGetTest() throws Exception {
        Integer dateFrom = null;
        Integer dateTo = null;
        String q = null;
        String order = null;
        Integer page = null;
        Integer limit = null;
        String response = api.faxHistoryGet(dateFrom, dateTo, q, order, page, limit);

        // TODO: test validations
    }
    
    /**
     * Calculate Total Price for Fax Messages sent
     *
     * Calculate Total Price for Fax Messages sent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void faxPricePostTest() throws Exception {
        FaxMessageCollection faxMessage = null;
        String response = api.faxPricePost(faxMessage);

        // TODO: test validations
    }
    
    /**
     * Get a single fax receipt based on message id.
     *
     * Get a single fax receipt based on message id.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void faxReceiptsByMessageIdGetTest() throws Exception {
        String messageId = null;
        String response = api.faxReceiptsByMessageIdGet(messageId);

        // TODO: test validations
    }
    
    /**
     * Get all delivery receipts
     *
     * Get all delivery receipts
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void faxReceiptsGetTest() throws Exception {
        Integer page = null;
        Integer limit = null;
        String response = api.faxReceiptsGet(page, limit);

        // TODO: test validations
    }
    
    /**
     * Add a delivery receipt
     *
     * Add a delivery receipt
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void faxReceiptsPostTest() throws Exception {
        Url url = null;
        String response = api.faxReceiptsPost(url);

        // TODO: test validations
    }
    
    /**
     * Mark delivery receipts as read
     *
     * Mark delivery receipts as read
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void faxReceiptsReadPutTest() throws Exception {
        DateBefore dateBefore = null;
        String response = api.faxReceiptsReadPut(dateBefore);

        // TODO: test validations
    }
    
    /**
     * Send a fax using supplied supported file-types.
     *
     * Send a fax using supplied supported file-types.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void faxSendPostTest() throws Exception {
        FaxMessageCollection faxMessage = null;
        String response = api.faxSendPost(faxMessage);

        // TODO: test validations
    }
    
}
